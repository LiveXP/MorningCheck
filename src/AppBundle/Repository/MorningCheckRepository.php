<?php

/*
 * This file is part of the Kaazar Project
 *
 * (c) 2017 LiveXP <dev@livexp.fr>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AppBundle\Repository;

use AppBundle\Entity\MorningCheck;
use AppBundle\Entity\Search;
use Doctrine\ORM\EntityRepository;

/**
 * MorningCheckRepository
 *
 * @author Fran√ßois MATHIEU <francois.mathieu@livexp.fr>
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @method MorningCheck[]|array findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class MorningCheckRepository extends EntityRepository
{
    /**
     * @return null|object|MorningCheck
     */
    public function findOneOpen()
    {
        return $this->findOneBy(['closed' => false], ['position' => 'ASC']);
    }

    /**
     * @return MorningCheck[]
     */
    public function findClosed()
    {
        return $this->findBy(['closed' => true, 'date' => new \DateTime()]);
    }

    /**
     * @param string $name
     *
     * @return MorningCheck|null|object
     */
    public function findOneByModelNameToday($name)
    {
        return $this->findOneBy(['name' => $name, 'date' => new \DateTime()]);
    }

    /**
     * @param \DateTime|null $date
     *
     * @return array of MorningCheck name
     */
    public function findNames(\DateTime $date = null)
    {
        $order = ['position' => 'ASC'];
        $results = null !== $date ? $this->findBy(['date' => $date], $order) : $this->findBy([], $order);

        $names = [];
        foreach ($results as $result) {
            $names[$result->getName()] = $result->getName();
        }

        return $names;
    }

    /**
     * Find and return a list of MorningCheck from a Search Entity
     *
     * @param Search $search
     *
     * @return MorningCheck[]|array
     */
    public function findBySearch(Search $search)
    {
        $params = [];
        if (null !== $search->getDate()) {
            $params['date'] = $search->getDate();
        }
        if (null !== $search->getName()) {
            $params['name'] = $search->getName();
        }

        return $this->findBy($params, ['date' => "DESC", 'position' => 'ASC']);
    }
}
