<?php

/*
 * This file is part of the Kaazar Project
 *
 * (c) 2017 LiveXP <dev@livexp.fr>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace AppBundle\Repository;

use AppBundle\Entity\MorningCheckModel;
use Doctrine\ORM\EntityRepository;

/**
 * MorningCheckModelRepository
 *
 * @author Fran√ßois MATHIEU <francois.mathieu@livexp.fr>
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MorningCheckModelRepository extends EntityRepository
{
    /**
     * Override to return only enabled MorningCheckModel
     *
     * @return MorningCheckModel[]
     */
    public function findAll()
    {
        return parent::findBy(['enabled' => true]);
    }

    /**
     * @param string $order
     *
     * @return MorningCheckModel[]
     */
    public function findByPosition($order = 'ASC')
    {
        return $this->findBy(['enabled' => true], ['position' => $order]);
    }

    /**
     * @param string $order
     *
     * @return null|object|MorningCheckModel
     */
    public function findOneByPosition($order = 'ASC')
    {
        return $this->findOneBy(['enabled' => true], ['position' => $order]);
    }

    /**
     * Find and return a MorningCheckModel not used as an open MorningCheck
     *
     * @return null|MorningCheckModel
     */
    public function findNext()
    {
        $names = [];
        $closed = $this->getEntityManager()->getRepository("AppBundle:MorningCheck")
            ->findBy(['date' => new \DateTime(), 'closed' => true]);

        foreach ($closed as $item) {
            $names[] = $item->getName();
        }

        $qb = $this->createQueryBuilder('q');

        if (count($names) > 0) {
            $qb->where('q.name NOT IN (:names)')
                ->andWhere('q.enabled = :enabled')
                ->setParameters(['names' => $names, 'enabled' => true]);
        }

        $result = $qb->orderBy('q.position', "ASC")->getQuery()->getResult();

        return isset($result[0]) ? $result[0] : null;
    }

}
